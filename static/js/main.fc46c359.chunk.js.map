{"version":3,"sources":["components/TimeCounter.js","components/FaceCapturer.js","components/EmotionBox.js","components/BorderLinearProgress.js","hooks/useRouter.js","pages/SoftTrainer.js","pages/Home.js","pages/StopPage.js","pages/Detail.js","App.js","reportWebVitals.js","index.js"],"names":["TimeCounter","MODEL_URL","loadFaceModel","a","faceapi","FaceCapturer","onEmotionChange","videoRef","useRef","useState","ifLoadModel","setIfLoadModel","useEffect","getVideo","navigator","mediaDevices","getUserMedia","video","width","height","stream","current","srcObject","play","onPlay","option","inputSize","scoreThreshold","withFaceExpressions","result","expressions","ref","onLoadedMetadata","useStyles","makeStyles","root","display","alignItems","justifyContent","progressBar","borderRadius","opacity","zIndex","position","right","bottom","checkedImage","imageNow","top","imageNext","table","angry","happy","surprised","tableNext","check","EmotionBox","emotion","onProgressChange","initCount","classes","count","setCount","checked","setChecked","console","log","length","setTimeout","ifMatch","className","src","alt","style","background","toFixed","emotionNumFix","BorderLinearProgress","withStyles","theme","colorPrimary","backgroundColor","palette","grey","type","bar","LinearProgress","useRouter","params","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","push","replace","pathname","query","queryString","parse","search","container","flexDirection","progresser","margin","stopContainer","marginBottom","blueButton","color","fontSize","textAlign","boxShadow","padding","lineHeight","paddingTop","SoftTrainer","router","setEmotion","progress","setProgress","variant","value","getProgressValue","onClick","e","image","Home","expContainer","icon","buttonG","StopPage","IconButton","exit","replay","gif","detail","Detail","gifUrl","detailUrl","goBack","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAiBeA,I,iCCdTC,EAAY,UAEZC,EAAa,uCAAG,sBAAAC,EAAA,sEACdC,IAAkCH,GADpB,uBAEdG,IAAgCH,GAFlB,2CAAH,qDAsDJI,EAjDM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAChBC,EAAWC,iBAAO,MACxB,EAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEKD,IACHR,IACAS,GAAe,IAGjBC,qBAAU,WACRC,MACC,CAACN,IAEJ,IAAMM,EAAQ,uCAAG,8BAAAV,EAAA,sEACIW,UAAUC,aAAaC,aAAa,CACrDC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,OAFhB,OACXC,EADW,QAIXH,EAAQV,EAASc,SACfC,UAAYF,EAClBH,EAAMM,OANS,2CAAH,qDASRC,EAAM,uCAAG,8BAAArB,EAAA,yDAEG,IACK,GACfsB,EAAS,IAAIrB,IAAgC,CACjDsB,UAHc,IAIdC,eAHmB,MAMjBpB,EAASc,QATA,gCAUIjB,IACKG,EAASc,QAASI,GACnCG,sBAZQ,OAUXC,EAVW,cAcbA,GAAUvB,EAAgBuB,EAAOC,aAdpB,2CAAH,qDAkBZ,OACE,mCACE,8BACE,uBAAOC,IAAKxB,EAAUyB,iBAAkBR,SClD1CS,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAElBC,YAAa,CACXrB,MAAO,OACPC,OAAQ,QACRqB,aAAc,MACdC,QAAS,MACTC,OAAQ,EACRC,SAAU,WACVC,MAAO,OACPC,OAAQ,QAGVC,aAAc,CACZ5B,MAAO,OACPC,OAAQ,OACRwB,SAAU,WACVC,MAAO,OACPF,OAAQ,GAEVK,SAAU,CACR7B,MAAO,OACPC,OAAQ,OACRwB,SAAU,WACVC,MAAO,OACPI,IAAK,OACLN,OAAQ,GAEVO,UAAW,CACT/B,MAAO,OACPC,OAAQ,UAGN+B,EAAQ,CACZC,MAAO,6BACPC,MAAO,6BACPC,UAAW,kCAGPC,EAAY,CAChBH,MAAO,iCACPC,MAAO,iCACPC,UAAW,sCAGPE,EAAQ,CAAC,QAAS,YAAa,QAAS,QAAS,YAAa,SAErD,SAASC,EAAT,GAA+D,IAAzCC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,iBAAkBC,EAAa,EAAbA,UACxDC,EAAU3B,IAChB,EAA0BxB,oBAAUkD,GAAa,GAAjD,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAA8BrD,oBAAS,GAAvC,mBAAOsD,EAAP,KAAgBC,EAAhB,KAqCA,OAJIP,GAhCY,SAACA,GACEA,EAAQF,EAAMM,IACT,CACpBR,UAAW,IACXD,MAAO,IACPD,MAAO,IAEwBI,EAAMM,KACrCI,QAAQC,IAAR,UAAeX,EAAMM,GAArB,SACAG,GAAW,GACXF,EAASD,EAAQ,GACjBH,EAAiB,CAAEG,MAAOA,EAAQ,EAAGM,OAAQZ,EAAMY,SACnDC,YAAW,WACTJ,GAAW,KACV,MAEHC,QAAQC,IAAR,UAAeX,EAAMM,GAArB,SAiBFQ,CAAQZ,GAIR,sBAAKa,UAAWV,EAAQzB,KAAxB,UACG4B,EACC,qBACEQ,IAAI,4BACJC,IAAI,GACJF,UAAWV,EAAQd,eAGrB,gCACE,qBACEyB,IAAKrB,EAAMK,EAAMM,IAEjBW,IAAI,UACJF,UAAWV,EAAQb,WAErB,qBACEuB,UAAWV,EAAQrB,YACnBkC,MAAO,CACLC,WAAW,mCAAD,OApCA,SAACjB,GAAa,IAAD,EAC7B5B,EASJ,OAFAA,EAAmD,QANvC4B,EAA8C,KAApC,UAAAA,EAAQF,EAAMM,WAAd,eAAuBc,QAAQ,IAAW,GAM7C,IALF,CACftB,UAAW,EACXD,OAAQ,EACRD,MAAO,GAEyBI,EAAMM,KACxCI,QAAQC,IAAIX,EAAMM,GAAQhC,GACnBA,EA0BkD+C,CAC7CnB,GADQ,sBAQlB,qBACEc,IAAKjB,EAAUC,EAAMM,EAAQ,IAC7BW,IAAI,UACJF,UAAWV,EAAQX,e,oBC5GZ4B,EAbcC,aAAW,SAACC,GAAD,MAAY,CAClD5C,KAAM,CACJhB,OAAQ,IAEV6D,aAAc,CACZC,gBACEF,EAAMG,QAAQC,KAA4B,UAAvBJ,EAAMG,QAAQE,KAAmB,IAAM,MAE9DC,IAAK,CACHJ,gBAAiB,cATQH,CAWzBQ,K,yBCLG,SAASC,IACd,IAAMC,EAASC,cACTC,EAAWC,cACXC,EAAUC,cACVC,EAAQC,cAGd,OAAOC,mBAAQ,WACb,MAAO,CAELC,KAAML,EAAQK,KACdC,QAASN,EAAQM,QACjBC,SAAUT,EAASS,SAInBC,MAAM,2BACDC,IAAYC,MAAMZ,EAASa,SAC3Bf,GAILM,QACAJ,WACAE,aAED,CAACJ,EAAQM,EAAOJ,EAAUE,IC3B/B,IAAM3D,EAAYC,YAAW,CAC3BsE,UAAW,CACTpE,QAAS,OACTqE,cAAe,SACfpE,WAAY,UAEdqE,WAAY,CACVC,OAAQ,eAEVC,cAAe,CACbC,aAAc,OAEhBC,WAAY,CACV7B,gBAAiB,UACjB8B,MAAO,UACP7F,MAAO,QACPC,OAAQ,QACR6F,SAAU,OACVC,UAAW,SACXzE,aAAc,QACd0E,UAAW,2CACXC,QAAS,QACTC,WAAY,QACZC,WAAY,SAEdxE,OAAQ,CACN3B,MAAO,OACPkB,QAAS,OACTE,eAAgB,eAChBD,WAAY,SACZ6E,UAAW,2CACX1E,aAAc,QACdmE,OAAQ,UAGG,SAASW,IACtB,IAAM1D,EAAU3B,IACVsF,EAAShC,IACf,EAA8B9E,mBAAS,MAAvC,mBAAOgD,EAAP,KAAgB+D,EAAhB,KACA,EAAgC/G,mBAAS,MAAzC,mBAAOgH,EAAP,KAAiBC,EAAjB,KAoBA,OACE,gCACE,qBAAKpD,UAAWV,EAAQ8C,WAAxB,SACE,cAAC,EAAD,CACEiB,QAAQ,cACRC,MACEH,EAbe,SAACA,GAAD,SACF,IAAjBA,EAAS5D,MAAe4D,EAAStD,QAYlB0D,CAAiBJ,GATpCF,EAAOnB,MAAMvC,SACgB,IAArB0D,EAAOnB,MAAMvC,MAAe0D,EAAOnB,MAAMjC,QAC7C,MAWF,sBAAKG,UAAWV,EAAQ4C,UAAWsB,QAtBpB,SAACC,GAClBR,EAAOtB,KAAP,mCACuBwB,QADvB,IACuBA,OADvB,EACuBA,EAAU5D,MADjC,0BACiD4D,QADjD,IACiDA,OADjD,EACiDA,EAAUtD,UAoBzD,UACE,qBAAKG,UAAWV,EAAQgD,cAAxB,SACE,qBAAKrC,IAAI,yBAAyBC,IAAI,WAExC,cAAC,EAAD,CAAclE,gBAhCI,SAACmD,GACvB+D,EAAW/D,MAgCP,sBAAKa,UAAWV,EAAQf,OAAxB,UACE,qBACEyB,UAAWV,EAAQkD,WACnBgB,QAAS,WACPP,EAAOtB,KAAK,gBAHhB,sCAQA,cAACzC,EAAD,CACEC,QAASA,EACTC,iBAzCe,SAAC+D,GACxBC,EAAYD,IAyCJ9D,UAAW4D,EAAOnB,MAAMvC,iBC3FpC,IAAM5B,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTqE,cAAe,SACfpE,WAAY,UAEd2F,MAAO,CACL9G,MAAO,IACPyF,OAAQ,UAIG,SAASsB,IACtB,IAAMrE,EAAU3B,IACVsF,EAAShC,IACf,OACE,sBAAKjB,UAAWV,EAAQzB,KAAxB,UACE,qBACEoC,IAAI,yBACJC,IAAI,SACJF,UAAWV,EAAQoE,QAErB,qBACEzD,IAAI,oBACJC,IAAI,OACJF,UAAWV,EAAQoE,MACnBF,QAAS,kBAAMP,EAAOtB,KAAK,YAE7B,qBAAK1B,IAAI,oBAAoBC,IAAI,OAAOF,UAAWV,EAAQoE,QAC3D,qBAAKzD,IAAI,oBAAoBC,IAAI,OAAOF,UAAWV,EAAQoE,QAC3D,qBACEzD,IAAI,yBACJC,IAAI,SACJF,UAAWV,EAAQoE,WCjC3B,IAAM/F,EAAYC,YAAW,CAC3BsE,UAAW,CACTpE,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAElBoE,WAAY,CACVC,OAAQ,eAEVuB,aAAc,CACZhH,MAAO,QACPkB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElB0F,MAAO,CACL9G,MAAO,SAETiH,KAAM,CACJjH,MAAO,SAETkH,QAAS,CACPhG,QAAS,UAGE,SAASiG,IACtB,IAAMzE,EAAU3B,IACVsF,EAAShC,IACftB,QAAQC,IAAIqD,EAAOnB,OACnB,IAA0BA,EAM1B,OACE,qCACE,qBAAK9B,UAAWV,EAAQ8C,WAAxB,SACE,cAAC,EAAD,CACEiB,QAAQ,cACRC,OAXkBxB,EAWMmB,EAAOnB,SAXe,IAAdA,EAAMvC,MAAeuC,EAAMjC,aAc/D,qBAAKG,UAAWV,EAAQsE,aAAxB,SACE,qBAAK3D,IAAI,uBAAuBC,IAAI,GAAGF,UAAWV,EAAQoE,UAE5D,sBAAK1D,UAAWV,EAAQ4C,UAAxB,UACE,cAAC8B,EAAD,CACElD,KAAK,OACL0C,QAAS,WACPP,EAAOtB,KAAK,QAGhB,cAACqC,EAAD,CAAYlD,KAAK,SAAS0C,QAvBb,SAACC,GAClBR,EAAOtB,KAAP,4BACuBsB,EAAOnB,MAAMvC,MADpC,mBACoD0D,EAAOnB,MAAMjC,kBA2BrE,SAASmE,EAAT,GAAwC,IAAlBlD,EAAiB,EAAjBA,KAAM0C,EAAW,EAAXA,QAK1B,OACE,sBACErD,MAAO,CAAErC,QAAS,OAAQqE,cAAe,SAAUpE,WAAY,UAC/DyF,QAASA,EAFX,UAIE,qBACEvD,IAAG,wBAAmBa,EAAnB,QACHZ,IAAI,GACJC,MAAO,CACLvD,MAAO,WAGX,qBAAKuD,MAAO,CAAEkC,OAAQ,QAAtB,SAhBU,CACZ4B,KAAM,2BACNC,OAAQ,4BAciCpD,QC7E7C,IAAMnD,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,OACTqE,cAAe,SACfpE,WAAY,SACZnB,MAAO,QAETuH,IAAK,CACHvH,MAAO,QAETwH,OAAQ,CACNxH,MAAO,OACPC,OAAQ,QAEV2F,WAAY,CACV7B,gBAAiB,UACjB8B,MAAO,UACP7F,MAAO,QACPC,OAAQ,QACR6F,SAAU,OACVC,UAAW,SACXzE,aAAc,QACd0E,UAAW,2CACXC,QAAS,QACTC,WAAY,QACZC,WAAY,WAGD,SAASsB,EAAT,GAAwC,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,UACjCjF,EAAU3B,IACVsF,EAAShC,IACf,OACE,sBAAKjB,UAAWV,EAAQzB,KAAxB,UACE,qBAAKoC,IAAKqE,EAAQpE,IAAI,GAAGF,UAAWV,EAAQ6E,MAC5C,qBAAKlE,IAAKsE,EAAWrE,IAAI,GAAGF,UAAWV,EAAQ8E,SAC/C,sBACEpE,UAAWV,EAAQkD,WACnBgB,QAAS,WACPP,EAAO3B,QAAQkD,UAHnB,UAMG,IANH,2BAOO,UCtCE,SAASC,IACtB,OACE,cAAC,IAAD,UACE,gCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,cAAC,IAAD,CAAOgB,KAAK,QAAQC,UAAW5B,IAC/B,cAAC,IAAD,CAAO2B,KAAK,cAAZ,SACE,cAACN,EAAD,CACEC,OAAO,gCACPC,UAAU,qCAGd,cAAC,IAAD,CAAOI,KAAK,cAAZ,SACE,cAACN,EAAD,CACEC,OAAO,gCACPC,UAAU,qCAGd,cAAC,IAAD,CAAOI,KAAK,QAAQC,UAAWb,SCxBvC,IAYec,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACf,EAAD,MAEFgB,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fc46c359.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction TimeCounter() {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let time = setTimeout(() => {\n      setCount(count + 1);\n    }, 1000);\n    return () => {\n      clearTimeout(time);\n    };\n  }, [count]);\n\n  return <div>{count}</div>;\n}\n\nexport default TimeCounter;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport * as faceapi from \"face-api.js\";\n\nconst MODEL_URL = \"/models\";\n\nconst loadFaceModel = async () => {\n  await faceapi.loadTinyFaceDetectorModel(MODEL_URL);\n  await faceapi.loadFaceExpressionModel(MODEL_URL);\n};\n\nconst FaceCapturer = ({ onEmotionChange }) => {\n  const videoRef = useRef(null);\n  const [ifLoadModel, setIfLoadModel] = useState(false);\n\n  if (!ifLoadModel) {\n    loadFaceModel();\n    setIfLoadModel(true);\n  }\n\n  useEffect(() => {\n    getVideo();\n  }, [videoRef]);\n\n  const getVideo = async () => {\n    let stream = await navigator.mediaDevices.getUserMedia({\n      video: { width: 262, height: 337 },\n    });\n    let video = videoRef.current;\n    video.srcObject = stream;\n    video.play();\n  };\n\n  const onPlay = async () => {\n    // tiny_face_detector options\n    let inputSize = 512;\n    let scoreThreshold = 0.5;\n    const option = new faceapi.TinyFaceDetectorOptions({\n      inputSize,\n      scoreThreshold,\n    });\n    let result;\n    if (videoRef.current) {\n      result = await faceapi\n        .detectSingleFace(videoRef.current, option)\n        .withFaceExpressions();\n    }\n    result && onEmotionChange(result.expressions);\n    // console.log(result?.expressions);\n    // setTimeout(() => onPlay());\n  };\n  return (\n    <>\n      <div>\n        <video ref={videoRef} onLoadedMetadata={onPlay} />\n      </div>\n    </>\n  );\n};\n\nexport default FaceCapturer;\n","import { useState, useEffect } from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  progressBar: {\n    width: \"50px\",\n    height: \"50px;\",\n    borderRadius: \"50%\",\n    opacity: \"0.6\",\n    zIndex: 3,\n    position: \"relative\",\n    right: \"35px\",\n    bottom: \"30px\",\n    // background: \"linear-gradient(to top, #B3DDFB 60%, white 0%)\",\n  },\n  checkedImage: {\n    width: \"58px\",\n    height: \"58px\",\n    position: \"relative\",\n    right: \"40px\",\n    zIndex: 2,\n  },\n  imageNow: {\n    width: \"58px\",\n    height: \"58px\",\n    position: \"relative\",\n    right: \"40px\",\n    top: \"27px\",\n    zIndex: 2,\n  },\n  imageNext: {\n    width: \"29px\",\n    height: \"29px\",\n  },\n});\nconst table = {\n  angry: \"/images/emotions/angry.png\",\n  happy: \"/images/emotions/happy.png\",\n  surprised: \"/images/emotions/surprised.png\",\n};\n\nconst tableNext = {\n  angry: \"/images/emotions/angryNext.png\",\n  happy: \"/images/emotions/happyNext.png\",\n  surprised: \"/images/emotions/surprisedNext.png\",\n};\n\nconst check = [\"happy\", \"surprised\", \"angry\", \"happy\", \"surprised\", \"angry\"];\n\nexport default function EmotionBox({ emotion, onProgressChange, initCount }) {\n  const classes = useStyles();\n  const [count, setCount] = useState(+initCount || 0);\n  const [checked, setChecked] = useState(false);\n  const ifMatch = (emotion) => {\n    let emotionNow = emotion[check[count]];\n    let threshouldTable = {\n      surprised: 0.99,\n      happy: 0.99,\n      angry: 0.6,\n    };\n    if (emotionNow > threshouldTable[check[count]]) {\n      console.log(`${check[count]}: Ok`);\n      setChecked(true);\n      setCount(count + 1);\n      onProgressChange({ count: count + 1, length: check.length });\n      setTimeout(() => {\n        setChecked(false);\n      }, 1000);\n    } else {\n      console.log(`${check[count]}: No`);\n    }\n  };\n  const emotionNumFix = (emotion) => {\n    let result = null;\n    const num = emotion ? emotion[check[count]]?.toFixed(2) * 100 : 0;\n    const fixTable = {\n      surprised: 0,\n      happy: -1,\n      angry: 3,\n    };\n    result = (~~(num / 10) + fixTable[check[count]]) * 10;\n    console.log(check[count], result);\n    return result;\n  };\n\n  if (emotion) {\n    ifMatch(emotion);\n  }\n\n  return (\n    <div className={classes.root}>\n      {checked ? (\n        <img\n          src=\"/images/icons/checked.svg\"\n          alt=\"\"\n          className={classes.checkedImage}\n        />\n      ) : (\n        <div>\n          <img\n            src={table[check[count]]}\n            // src=\"/images/icons/checked.svg\"\n            alt=\"emotion\"\n            className={classes.imageNow}\n          />\n          <div\n            className={classes.progressBar}\n            style={{\n              background: `linear-gradient(to top, #B3DDFB ${emotionNumFix(\n                emotion\n              )}%, white 0%)`,\n            }}\n          ></div>\n        </div>\n      )}\n\n      <img\n        src={tableNext[check[count + 1]]}\n        alt=\"emotion\"\n        className={classes.imageNext}\n      />\n    </div>\n  );\n}\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n  },\n  colorPrimary: {\n    backgroundColor:\n      theme.palette.grey[theme.palette.type === \"light\" ? 200 : 700],\n  },\n  bar: {\n    backgroundColor: \"#6DBEF8\",\n  },\n}))(LinearProgress);\n\nexport default BorderLinearProgress;\n","import { useMemo } from \"react\";\nimport queryString from \"query-string\";\nimport {\n  useParams,\n  useLocation,\n  useHistory,\n  useRouteMatch,\n} from \"react-router-dom\";\n// Hook\nexport function useRouter() {\n  const params = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n  // Return our custom router object\n  // Memoize so that a new object is only returned if something changes\n  return useMemo(() => {\n    return {\n      // For convenience add push(), replace(), pathname at top level\n      push: history.push,\n      replace: history.replace,\n      pathname: location.pathname,\n      // Merge params and parsed query string into single \"query\" object\n      // so that they can be used interchangeably.\n      // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n      query: {\n        ...queryString.parse(location.search), // Convert string to object\n        ...params,\n      },\n      // Include match, location, history objects so we have\n      // access to extra React Router functionality if needed.\n      match,\n      location,\n      history,\n    };\n  }, [params, match, location, history]);\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nimport TimeCounter from \"../components/TimeCounter\";\nimport FaceCapturer from \"../components/FaceCapturer\";\nimport EmotionBox from \"../components/EmotionBox\";\nimport BorderLinearProgress from \"../components/BorderLinearProgress\";\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"../hooks/useRouter\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  progresser: {\n    margin: \"2.5em 1.5em\",\n  },\n  stopContainer: {\n    marginBottom: \"1em\",\n  },\n  blueButton: {\n    backgroundColor: \"#0095FF\",\n    color: \"#E8F5FF\",\n    width: \"3.5em\",\n    height: \"5.5em\",\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    borderRadius: \"0.5em\",\n    boxShadow: \"0px 7px 12px 0px rgba(152, 152, 152, 58)\",\n    padding: \"0.5em\",\n    lineHeight: \"1.8em\",\n    paddingTop: \"0.9em\",\n  },\n  bottom: {\n    width: \"80vw\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    boxShadow: \"0px 7px 12px 0px rgba(152, 152, 152, 12)\",\n    borderRadius: \"0.8em\",\n    margin: \"50px\",\n  },\n});\nexport default function SoftTrainer() {\n  const classes = useStyles();\n  const router = useRouter();\n  const [emotion, setEmotion] = useState(null);\n  const [progress, setProgress] = useState(null);\n\n  const onEmotionChange = (emotion) => {\n    setEmotion(emotion);\n  };\n  const onProgressChange = (progress) => {\n    setProgress(progress);\n  };\n  const toStopPage = (e) => {\n    router.push(\n      `/stop/query?count=${progress?.count}&length=${progress?.length}`\n    );\n  };\n  const getProgressValue = (progress) =>\n    ~~((progress.count * 100) / progress.length);\n\n  const getProgressValueByQuery = () =>\n    router.query.count\n      ? ~~((router.query.count * 100) / router.query.length)\n      : 0;\n  return (\n    <div>\n      <div className={classes.progresser}>\n        <BorderLinearProgress\n          variant=\"determinate\"\n          value={\n            progress ? getProgressValue(progress) : getProgressValueByQuery()\n          }\n        />\n      </div>\n      <div className={classes.container} onClick={toStopPage}>\n        <div className={classes.stopContainer}>\n          <img src=\"/images/icons/stop.png\" alt=\"stop\" />\n        </div>\n        <FaceCapturer onEmotionChange={onEmotionChange} />\n        <div className={classes.bottom}>\n          <div\n            className={classes.blueButton}\n            onClick={() => {\n              router.push(\"/detailsoft\");\n            }}\n          >\n            查看讲解\n          </div>\n          <EmotionBox\n            emotion={emotion}\n            onProgressChange={onProgressChange}\n            initCount={router.query.count}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { useRouter } from \"../hooks/useRouter\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: 375,\n    margin: \"10px\",\n  },\n});\n\nexport default function Home() {\n  const classes = useStyles();\n  const router = useRouter();\n  return (\n    <div className={classes.root}>\n      <img\n        src=\"images/home/header.png\"\n        alt=\"header\"\n        className={classes.image}\n      ></img>\n      <img\n        src=\"images/home/1.png\"\n        alt=\"todo\"\n        className={classes.image}\n        onClick={() => router.push(\"/soft\")}\n      ></img>\n      <img src=\"images/home/2.png\" alt=\"todo\" className={classes.image}></img>\n      <img src=\"images/home/3.png\" alt=\"todo\" className={classes.image}></img>\n      <img\n        src=\"images/home/bottom.png\"\n        alt=\"bottom\"\n        className={classes.image}\n      ></img>\n    </div>\n  );\n}\n","import BorderLinearProgress from \"../components/BorderLinearProgress\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useRouter } from \"../hooks/useRouter\";\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  progresser: {\n    margin: \"4.5em 1.5em\",\n  },\n  expContainer: {\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    width: \"335px\",\n  },\n  icon: {\n    width: \"118px\",\n  },\n  buttonG: {\n    display: \"flex\",\n  },\n});\nexport default function StopPage() {\n  const classes = useStyles();\n  const router = useRouter();\n  console.log(router.query);\n  const getCountBySearch = (query) => ~~((query.count * 100) / query.length);\n  const toSoftPage = (e) => {\n    router.push(\n      `/soft/query?count=${router.query.count}&length=${router.query.length}`\n    );\n  };\n  return (\n    <>\n      <div className={classes.progresser}>\n        <BorderLinearProgress\n          variant=\"determinate\"\n          value={getCountBySearch(router.query)}\n        />\n      </div>\n      <div className={classes.expContainer}>\n        <img src=\"/images/stop/exp.png\" alt=\"\" className={classes.image} />\n      </div>\n      <div className={classes.container}>\n        <IconButton\n          type=\"exit\"\n          onClick={() => {\n            router.push(\"/\");\n          }}\n        />\n        <IconButton type=\"replay\" onClick={toSoftPage} />\n      </div>\n    </>\n  );\n}\n\nfunction IconButton({ type, onClick }) {\n  const table = {\n    exit: \"退出训练\",\n    replay: \"继续训练\",\n  };\n  return (\n    <div\n      style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}\n      onClick={onClick}\n    >\n      <img\n        src={`/images/icons/${type}.svg`}\n        alt=\"\"\n        style={{\n          width: \"118px\",\n        }}\n      />\n      <div style={{ margin: \"20px\" }}>{table[type]}</div>\n    </div>\n  );\n}\n","import { makeStyles } from \"@material-ui/core\";\nimport { useRouter } from \"../hooks/useRouter\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"75vw\",\n  },\n  gif: {\n    width: \"75vw\",\n  },\n  detail: {\n    width: \"75vw\",\n    height: \"45vh\",\n  },\n  blueButton: {\n    backgroundColor: \"#0095FF\",\n    color: \"#E8F5FF\",\n    width: \"5.5em\",\n    height: \"3.5em\",\n    fontSize: \"14px\",\n    textAlign: \"center\",\n    borderRadius: \"0.5em\",\n    boxShadow: \"0px 7px 12px 0px rgba(152, 152, 152, 58)\",\n    padding: \"0.5em\",\n    lineHeight: \"1.8em\",\n    paddingTop: \"0.9em\",\n  },\n});\nexport default function Detail({ gifUrl, detailUrl }) {\n  const classes = useStyles();\n  const router = useRouter();\n  return (\n    <div className={classes.root}>\n      <img src={gifUrl} alt=\"\" className={classes.gif} />\n      <img src={detailUrl} alt=\"\" className={classes.detail} />\n      <div\n        className={classes.blueButton}\n        onClick={() => {\n          router.history.goBack();\n        }}\n      >\n        {\" \"}\n        返回训练{\" \"}\n      </div>\n    </div>\n  );\n}\n","import { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport SoftTrainer from \"./pages/SoftTrainer\";\nimport Home from \"./pages/Home\";\nimport StopPage from \"./pages/StopPage\";\nimport Detail from \"./pages/Detail\";\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/soft\" component={SoftTrainer} />\n        <Route path=\"/detailsoft\">\n          <Detail\n            gifUrl=\"/images/details/detailgif.png\"\n            detailUrl=\"/images/details/detailsoft.png\"\n          />\n        </Route>\n        <Route path=\"/detailhard\">\n          <Detail\n            gifUrl=\"/images/details/detailgif.png\"\n            detailUrl=\"/images/details/detailhard.png\"\n          />\n        </Route>\n        <Route path=\"/stop\" component={StopPage} />\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}